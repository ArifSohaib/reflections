What happens when you initialize a repository? Why do you need to do it?
  When a repository is initialized, a hidden folder is made in the source folder
  This folder contains all the files and data required to move between versions of the files in the repository.
  We need to do it to start tracking multiple versions of the files in the repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
  The staging area contains all the file names to be added to the next commit.
  The repository is the list of all the files being already tracked.
  The working directory is just the directory where the repository is placed in the system.
  The staging area allows us to add or remove files from being tracked and added to the next commit.
  Without the staging area, files would either have to be added one by one or all would be automatically added, which may not be what we want.

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
