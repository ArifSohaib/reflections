When would you want to use a remote repository rather than keeping all your work local?
  When collaborating on a project or when working on a project from multiple locations/computers it would be much better to use a remote repository.
  Another reason is to use the remote as a backup of the repository in case of emergency.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
  There could be some local changes that could make automatically pulled code unstable.
  It would be difficult to keep up with the code if it changes constantly without my knowledge and sections and features I don't know are added by someone else and pulled to my local repository.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
  branch - has the same code as before but copied to a named commit ID and in the same repository.
  clone - copy of another local or remote repository
  fork - copy of remote repository within GitHub server

  branch would be used to add or test features in an existing repository locally
  clone would be used to have a new copy of another repository that may exist locally or remotely
  fork is used to copy someone else' repository in your own GitHub account so that it can be safely modified and have changes pushed to it.

What is the benefit of having a copy of the last known state of the remote stored locally?
  Having the last known state of the remote repository stored locally allows conflict resolution in merges in a way that is very similar to merging branches of a local repository.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
  Without Git or GitHub, I could collaborate using tools like Google Drive.
  It would be easier to save and restore data as these tools automatically push changes while still having restore points.
  However it would be much more difficult to track which collaborator did which changes.
  It would also be more difficult to merge changes as these tools automatically update any changes regardless of possible confects while GitHub has tools like merge requests and fetch to help resolve these issues.
